{"version":3,"sources":["Components/ActionList.js","Components/Homepage.js","Components/Update.js","App.js","serviceWorker.js","index.js"],"names":["ActionList","props","style","borderStyle","width","height","display","textAlign","fontSize","position","left","bottom","type","className","onClick","del","id","fontFamily","color","from","to","after","toFixed","Homepage","switch","state","toggle","setState","value","this","tempFrom","onChange","handleFrom","selected","coins","map","e","name","coinType","placeholder","handleInputSum","right","tempTo","handleTo","handleStart","href","actions","i","Component","Update","index","delMoney","handleNewCoin","handleNewCoinValue","handleNewcoinType","updateCoin","App","tempInputSum","newCoin","newCoinValue","newcoinType","target","match","MultiplyOperator","DivideOperator","sum","alert","actionId","length","tempAction","delAction","num","filtered","filter","element","temp","exact","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f1c8000e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function ActionList(props) {\r\n    return (\r\n    <div style={{borderStyle:'groove',width:'300px',height:'350px',display:'inline-block',textAlign:'center'}}>\r\n        <br/>\r\n        <button style={{fontSize:'20px',position:'relative',left:'120px',bottom:'13px'}} type='button' className='btn btn-danger' onClick={()=>{props.del(props.id)}}>x</button>  \r\n        <p style={{fontSize:'30px',fontFamily:'Times new roman',color:'navy'}}> # {props.id}</p>\r\n        <p style={{fontSize:'30px',fontFamily:'Times new roman',color:'navy'}}> <hr/> From: {props.from} <br/> To: {props.to} <hr/> </p>   \r\n        <p style={{fontSize:'30px',fontFamily:'Times new roman',color:'navy'}}> Exchange : {props.after.toFixed(2)} {props.to}</p>  \r\n    </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\"\r\nimport ActionList from './ActionList.js'\r\nimport { Alert } from 'reactstrap'\r\n\r\nexport default class Homepage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             toggle:false\r\n        }\r\n    }\r\n    \r\n    switch=()=>{\r\n        if(this.state.toggle===false){\r\n            this.setState({toggle:true})\r\n        }else{\r\n            this.setState({toggle:false})\r\n        }  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"App\">\r\n            <br/>\r\n            <hr/>\r\n            <h1 style={{fontSize:'60px',color:'blue'}}>EXCHANGE</h1>\r\n            <hr/>\r\n                <div>\r\n                    <p style={{fontSize:'50px',fontFamily:'Times new roman',color:'navy'}} > From: </p>\r\n                    <select style={{fontFamily:'Times new roman',color:'green',fontSize:'30px',height:'40px',width:'250px',position:'relative',left:'30px'}} value={this.props.tempFrom} onChange={this.props.handleFrom}>\r\n                    <option value=\"\" selected>Please select</option>\r\n                    {this.props.coins.map((e)=>{return <option value={e.name}>{e.coinType} </option>})}    \r\n                    </select>\r\n                    <input type=\"text\" style={{fontFamily:'Times new roman',color:'green',width:'400px',height:'40px',fontSize:'30px',position:'relative',left:'50px'}} placeholder='Enter value' onChange={this.props.handleInputSum} />\r\n                </div>\r\n                <div>\r\n                    <br/>\r\n                    <p style={{fontSize:'50px',fontFamily:'Times new roman',color:'navy',position:'relative',right:'30px'}} > To: </p>\r\n                    <select style={{fontFamily:'Times new roman',color:'green',fontSize:'30px',height:'40px',width:'250px',position:'relative',right:'20px'}} value={this.props.tempTo} onChange={this.props.handleTo}>\r\n                    <option value=\"\" selected>Please select</option>\r\n                    {this.props.coins.map((e)=>{return <option value={e.name}>{e.coinType} </option>})}    \r\n                    </select>\r\n                </div> \r\n                <br/>\r\n                <br/>\r\n                <button type='button' className='btn btn-success' style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px'}} onClick={this.props.handleStart}>START</button>\r\n            <br/>\r\n            <br/>\r\n            <Link to='/Update'><button style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px'}} type='button' className='btn btn-danger'>Update</button></Link>                \r\n            <a href='http://www.facebook.com' > <button style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px'}} type='button' className='btn btn-primary'> Share on Facebook! </button>  </a>\r\n            <button onClick={this.switch} style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px'}} type='button' className='btn btn-warning' >View exchange list</button>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                {this.state.toggle && this.props.actions.map((e,i)=>{\r\n                    return (\r\n                    <ActionList from={e.from} to={e.to} after={e.after} id={e.id} del={this.props.del} type={e.type} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport { ThemeProvider } from 'react-bootstrap';\r\n\r\nexport default class Update extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div style={{textAlign:'center'}}>\r\n            <br/>\r\n            <hr/>\r\n            <h1 style={{fontSize:'60px',color:'blue'}}>Update</h1>\r\n            <hr/>                \r\n            <br/>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className ='col-12'>\r\n                        <table className='table table-hover table-info'>\r\n                        <tr>\r\n                            <th> Name </th>\r\n                            <th> Value </th>\r\n                            <th> Type </th>\r\n                        </tr>\r\n                            {this.props.coins.map((e,index)=>{\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{e.name}</td>\r\n                                        <td>{e.value}</td>\r\n                                        <td>{e.coinType}</td>\r\n                                        <button onClick={()=>{this.props.delMoney(index,this.state.index)}} type='button' className='btn btn-outline-danger'> X </button>\r\n                                    </tr>\r\n                                )})}\r\n                        </table> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <br/>\r\n                    <input type=\"text\" style={{fontFamily:'Times new roman',color:'green',width:'650px',height:'40px',fontSize:'30px'}} placeholder='Coine Name should be only letters and more than 3' onChange={this.props.handleNewCoin}/>\r\n                    <br/>\r\n                    <br/>\r\n                    <input type=\"number\" style={{fontFamily:'Times new roman',color:'green',width:'650px',height:'40px',fontSize:'30px'}} placeholder='Coine Value should be only numbers' onChange={this.props.handleNewCoinValue}/>\r\n                    <br/>\r\n                    <br/>\r\n                    <input type=\"text\" style={{fontFamily:'Times new roman',color:'green',width:'650px',height:'40px',fontSize:'30px'}} placeholder='Coine Type should be only letters and more than 3' onChange={this.props.handleNewcoinType}/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Link to='/'><button style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px'}} type='button' className='btn btn-danger'>Back</button></Link>\r\n                    <button onClick={this.props.updateCoin} style={{width:'250px',height:'60px',fontSize:'25px'}} type='button' className='btn btn-info' > Update </button>                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport {HashRouter as Router,Switch,Route} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Homepage from './Components/Homepage.js';\nimport Update from './Components/Update.js';\n\nexport default class App extends Component {\n  \n  state = {\n      coins:[{name:'USD',value:3.5,coinType:'Dollar'},\n            {name:'EUR',value:4,coinType:'Euro'},\n            {name:'ILS',value:1,coinType:'Shekel'}],\n      tempFrom:'',\n      tempTo:'',\n      tempInputSum:'',\n      actions: [],\n      newCoin:'',\n      newCoinValue:0,\n      newcoinType:'',\n  }\n\n  handleFrom=(e)=>{ // select your money type that you want to exchange \n    this.setState({tempFrom:e.target.value})\n  }\n\n  handleTo=(e)=>{ // select your money type that you want to exchange to\n    this.setState({tempTo:e.target.value}) \n  }\n\n  handleInputSum=(e)=>{ // insert how much money you want to exchange\n    this.setState({tempInputSum:e.target.value})\n  }\n\n  handleStart=()=>{ // calculate how much money you will get\n    if (this.state.tempInputSum.match(/^[0-9]+$/)){\n      if(this.state.tempFrom && this.state.tempTo && this.state.tempFrom !== this.state.tempTo){\n        let MultiplyOperator = 0;\n        this.state.coins.map((e)=>{\n          if(this.state.tempFrom === e.name){\n            MultiplyOperator = e.value;\n          }\n        })\n        let DivideOperator = 0;\n        this.state.coins.map((e)=>{\n          if(this.state.tempTo === e.name){\n            DivideOperator = e.value;\n          }\n        })\n        if(this.state.tempInputSum>0){\n          let sum = this.state.tempInputSum * MultiplyOperator;\n          sum = sum / DivideOperator;\n          alert(sum);\n          let actionId = this.state.actions.length+1;\n          let tempAction={from:this.state.tempFrom,\n                          to:this.state.tempTo,\n                          type:this.state.coins.type,\n                          after:sum,\n                          id:actionId}\n          this.setState({actions:[tempAction,...this.state.actions]})\n        }\n      }else{\n        alert('Please choose which coine type you want');\n      }\n    }else{\n      alert('Please insert only numbers ');\n    }\n  }\n\n  delAction=(num)=>{ // delete action from action list\n    let filtered = this.state.actions.filter((e)=>(e.id!==num))\n    this.setState({actions:filtered})\n  }\n\n  delMoney=(i)=>{ // Delete coine from your table\n    const delMoney = this.state.coins.filter((element,index)=>(index !== i))\n    this.setState({coins : [...delMoney]})\n  }\n\n  handleNewCoin=(e)=>{ // insert new coin name\n    this.setState({newCoin:e.target.value})\n  }\n\n  handleNewCoinValue=(e)=>{ // insert new coin value\n    this.setState({newCoinValue:e.target.value}) \n  }\n\n  handleNewcoinType=(e)=>{ // // insert new coin type\n    this.setState({newcoinType:e.target.value}) \n  }\n\n  updateCoin=()=>{ // add new coine to your table\n    debugger\n      let temp = 0\n      this.state.coins.map((e,index)=>{\n        if(this.state.newCoin === e.name && this.state.newcoinType === e.coinType){\n          temp++ ;\n        }\n      })\n      if(temp === 1){\n        this.state.coins.value = this.state.newCoin\n        this.setState({coins:[...this.state.coins]})\n      }if(temp === 0){\n          if(this.state.newCoin.length >= 3 && this.state.newCoin.match(/^[a-z,A-Z]+$/) && this.state.newCoinValue >= 1 && this.state.newcoinType.length >= 3 && this.state.newcoinType.match(/^[a-z,A-Z]+$/)){\n              alert('Your add ends successfully')\n              this.setState({coins:[...this.state.coins,{name:this.state.newCoin,value:this.state.newCoinValue,coinType:this.state.newcoinType}]})\n          }else{\n              alert('Please check your coin value,name,type')\n          }\n      }else{\n          alert('Your coine is in the list')\n      }\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Router>\n          <Switch>\n            <Route exact path='/' render={(props) =>  <Homepage {...props} coins={this.state.coins} handleFrom={this.handleFrom} handleTo={this.handleTo}\n                                                              handleInputSum={this.handleInputSum} handleStart={this.handleStart} del={this.delAction}\n                                                              actions={this.state.actions} />}/>\n\n            <Route exact path='/Update' render={(props) => <Update {...props} delMoney={this.delMoney} coins={this.state.coins} handleNewCoin={this.handleNewCoin} handleNewCoinValue={this.handleNewCoinValue}\n                                                                   handleNewcoinType={this.handleNewcoinType} updateCoin={this.updateCoin}/>}/>\n         </Switch>\n        </Router>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}